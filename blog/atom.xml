<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hxia209.github.io/hui-blog/blog</id>
    <title>Fried Chikenetes Blog</title>
    <updated>2022-03-15T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hxia209.github.io/hui-blog/blog"/>
    <subtitle>Fried Chikenetes Blog</subtitle>
    <icon>https://hxia209.github.io/hui-blog/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[How to make your certificates available inside your Java container]]></title>
        <id>java-container-certificates</id>
        <link href="https://hxia209.github.io/hui-blog/blog/java-container-certificates"/>
        <updated>2022-03-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This blog post takes you through different approaches to make your certificates available in your Java container running in a Kubernetes distribution. Going from the most static way to being able to dynamically change it during a Deployment rollout.]]></summary>
        <content type="html"><![CDATA[<p>This blog post takes you through different approaches to make your certificates available in your Java container running in a Kubernetes distribution. Going from the most static way to being able to dynamically change it during a <em>Deployment</em> rollout.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="import-certificate-through-dockerfile">Import certificate through Dockerfile<a class="hash-link" href="#import-certificate-through-dockerfile" title="Direct link to heading">​</a></h2><p>One of the most direct ways to get your certificate into your container is add it to your Dockerfile. Lets imagine that you have a certificate <code>my-certificate.cer</code>. By copying it into your Docker container and importing it to the truststore during build time is going to make it permanent for the image container.</p><div class="codeBlockContainer_I0IT language-Dockerfile theme-code-block"><div class="codeBlockContent_wNvx Dockerfile"><pre tabindex="0" class="prism-code language-Dockerfile codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">COPY my-certificate.cer $JAVA_HOME/jre/lib/security</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN keytool -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt -trustcacerts -importcert -alias my-cert -file $JAVA_HOME/jre/lib/security/my-certificate.cer</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>The above example assumes the following:</p><ul><li>Your base image is Java based.</li><li>The default storepass is <code>changeit</code>. Change it if it is not.</li><li><code>my-cert</code> is an example alias, use your own instead.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="configmap-with-a-local-cacerts">ConfigMap with a local cacerts<a class="hash-link" href="#configmap-with-a-local-cacerts" title="Direct link to heading">​</a></h2><p>In contrast to the method presented before, which requires you to build your image everytime you want to change or import new certificates. Having it mounted as a volume into your container makes swapping certificates more cloud friendly.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="step-1---import-certificate-into-truststore">Step 1 - Import certificate into truststore<a class="hash-link" href="#step-1---import-certificate-into-truststore" title="Direct link to heading">​</a></h3><p>Make a copy or use your local cacerts store as the holder of your certificate. Importing it to the trustore:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">keytool -keystore </span><span class="token variable" style="color:#36acaa">$JAVA_HOME</span><span class="token plain">/jre/lib/security/cacerts -storepass changeit -noprompt -trustcacerts -importcert -alias my-cert -file </span><span class="token variable" style="color:#36acaa">$JAVA_HOME</span><span class="token plain">/jre/lib/security/my-certificate.cer</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h3 class="anchor anchorWithStickyNavbar_mojV" id="step-2---create-configmap">Step 2 - Create <em>ConfigMap</em><a class="hash-link" href="#step-2---create-configmap" title="Direct link to heading">​</a></h3><p>Assuming you already have your Java application running in your Kubernetes system, run:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">NAMESPACE</span><span class="token operator" style="color:#393A34">=</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Namespace where your app is running</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">export</span><span class="token plain"> </span><span class="token assign-left variable" style="color:#36acaa">NAME</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">cacerts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl create configmap </span><span class="token variable" style="color:#36acaa">$NAME</span><span class="token plain"> --from-file</span><span class="token operator" style="color:#393A34">=</span><span class="token variable" style="color:#36acaa">$JAVA_HOME</span><span class="token plain">/jre/lib/security/cacerts -n </span><span class="token variable" style="color:#36acaa">$NAMESPACE</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>For simplicity, we're calling our <em>configMap</em> <strong>cacerts</strong>, but it could be any other name, as long as it is unique inside <code>$NAMESPACE</code>.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="step-3---mount-configmap-into-deployment">Step 3 - Mount <em>ConfigMap</em> into <em>Deployment</em><a class="hash-link" href="#step-3---mount-configmap-into-deployment" title="Direct link to heading">​</a></h3><p>To mount cacerts configMap as a volume into your <em>Deployment</em>, create a volume entry referencing the configMap you've just created, then add another volumeMount entry to the Java application container. See example below:</p><div class="codeBlockContainer_I0IT language-yaml theme-code-block"><div class="codeBlockContent_wNvx yaml"><pre tabindex="0" class="prism-code language-yaml codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Deployment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> example</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> example_repo/example</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">volumeMounts</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cacerts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">mountPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /etc/pki/java/cacerts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">subPath</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cacerts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">volumes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cacerts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">configMap</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> cacerts</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>You can either modify your yaml directly on the console or open a <code>vim</code> editor in your command line by running:</p><div class="codeBlockContainer_I0IT language-bash theme-code-block"><div class="codeBlockContent_wNvx bash"><pre tabindex="0" class="prism-code language-bash codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl edit deployment/example - n </span><span class="token variable" style="color:#36acaa">$NAMESPACE</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="configmap-with-certificates-and-init-container">ConfigMap with certificates and Init-Container<a class="hash-link" href="#configmap-with-certificates-and-init-container" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_mojV" id="cluster-operator-and-init-container">Cluster Operator and Init-Container<a class="hash-link" href="#cluster-operator-and-init-container" title="Direct link to heading">​</a></h2>]]></content>
        <category label="java" term="java"/>
        <category label="container" term="container"/>
        <category label="certificates" term="certificates"/>
    </entry>
</feed>