<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hxia209.github.io/hui-blog/blog</id>
    <title>Fried Chikernetes Blog</title>
    <updated>2022-03-15T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hxia209.github.io/hui-blog/blog"/>
    <subtitle>Fried Chikernetes Blog</subtitle>
    <icon>https://hxia209.github.io/hui-blog/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[How to make your certificates available inside your Java container]]></title>
        <id>java-container-certificates</id>
        <link href="https://hxia209.github.io/hui-blog/blog/java-container-certificates"/>
        <updated>2022-03-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This blog post takes you through different approaches to make your certificates available in your Java container when deployed to Kubernetes. Going from the most static way to be able to dynamically change it during rollout.]]></summary>
        <content type="html"><![CDATA[<p>This blog post takes you through different approaches to make your certificates available in your Java container when deployed to Kubernetes. Going from the most static way to be able to dynamically change it during rollout.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="import-certificate-through-dockerfile">Import certificate through Dockerfile<a class="hash-link" href="#import-certificate-through-dockerfile" title="Direct link to heading">​</a></h2><p>One of the most direct ways to get your certificate into your container is add it to your Dockerfile. Lets imagine you have a certifacte <code>my-certificate.cer</code>.</p><div class="codeBlockContainer_I0IT language-Dockerfile theme-code-block"><div class="codeBlockContent_wNvx Dockerfile"><pre tabindex="0" class="prism-code language-Dockerfile codeBlock_jd64 thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_mRuA"><span class="token-line" style="color:#393A34"><span class="token plain">COPY my-certificate.cer $JAVA_HOME/jre/lib/security</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">RUN keytool -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt -trustcacerts -importcert -alias my-cert -file $JAVA_HOME/jre/lib/security/my-certificate.cer</span><br></span></code></pre><button type="button" aria-label="Copy code to clipboard" class="copyButton_wuS7 clean-btn">Copy</button></div></div><p>The above example assumes the following:</p><ul><li>Your base image is Java based.</li><li>The default storepass is <code>changeit</code>. Change it if it is not.</li><li><code>my-cert</code> is an example alias, use your own instead.</li></ul><h2 class="anchor anchorWithStickyNavbar_mojV" id="configmap-with-a-local-cacerts">ConfigMap with a local cacerts<a class="hash-link" href="#configmap-with-a-local-cacerts" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_mojV" id="configmap-with-certificates-and-init-container">ConfigMap with certificates and Init-Container<a class="hash-link" href="#configmap-with-certificates-and-init-container" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_mojV" id="cluster-operator-and-init-container">Cluster Operator and Init-Container<a class="hash-link" href="#cluster-operator-and-init-container" title="Direct link to heading">​</a></h2>]]></content>
        <category label="java" term="java"/>
        <category label="container" term="container"/>
        <category label="certificates" term="certificates"/>
    </entry>
</feed>